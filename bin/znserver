#!/usr/bin/env node

'use strict';
var zn = require('../src/zn');
zn.define([
    'net',
    'io',
    'node:path',
    'node:child_process',
    'node:os',
    'node:fs'
], function (net, io, path, child_process, os, fs) {

    var argv = process.argv;
    var _argv = {};
    argv = argv.slice(2);

    if(argv[0]=='init'){
        var _type = argv[1] || 'project';
        var _name = argv[2] || '';
        var _target = __dirname + '/../src/net/http_server/inits/' + _type;
        var _source = process.cwd();
        if(_name){
            _source = _source + zn.SLASH + _name;
        }
        zn.info('znserver init start.');
        io.FileUtil.copyDir(path.normalize(_target), path.normalize(_source), function (){
            zn.info('init end.');
        });
        return;
    }

    zn.each(argv, function (value){
        var _temps = value.split(':');
        _argv[_temps[0]] = _temps[1];
    });

    var _host = os.platform() === 'darwin'?'127.0.0.1':'0.0.0.0';
    var _configPath = process.cwd() + zn.SLASH + 'zn.server.config.js';
    var _serverConfig = {
        host: _argv.host || '0.0.0.0',
        port: _argv.port || 8080,
        currentPath: true,
        debug: true,
        catalog: '/',
        __dirname: process.cwd() || __dirname
    };
    if(fs.existsSync(_configPath)){
        zn.load(_configPath, function (data) {
            zn.extend(_serverConfig, data);
            net.http.HttpServer.createServer(_serverConfig);
            zn.info('You can press [ control + c ] to stop current zeanium server.');
        });
        return;
    }

    net.http.HttpServer.createServer(_serverConfig);
    zn.info('You can press [ control + c ] to stop current zeanium server.');

}).exec();
